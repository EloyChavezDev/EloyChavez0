---
import BaseLayout from "../../layouts/BaseLayout.astro";
import HorizontalCard from "../../components/HorizontalCard.astro";
import { getCollection } from "astro:content";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  
  // Obtener todas las etiquetas únicas de todos los posts
  const tags = [...new Set(posts.flatMap(post => post.data.tags || []))] as string[];
  
  // Crear una ruta para cada etiqueta
  return tags.map(tag => {
    // Usar la etiqueta tal cual para los parámetros
    return {
      params: { tag },
      props: { 
        tag,
        posts: posts.filter(post => 
          post.data.tags && post.data.tags.includes(tag)
        )
      }
    };
  });
}

// El parámetro tag vendrá ya en el formato correcto en los parámetros
const { tag } = Astro.params;
// Obtener los posts de las props
const { posts } = Astro.props;
---

<BaseLayout title={`Posts etiquetados con: ${tag}`} sideBarActiveItemID="blog">
  <div class="mb-5">
    <div class="text-3xl w-full font-bold">Posts etiquetados con: #{tag}</div>
  </div>

  {
    posts.length === 0 ? (
      <div class="bg-base-200 border-l-4 border-secondary w-full p-4 min-w-full">
        <p class="font-bold">¡Lo siento!</p>
        <p>No hay posts con esta etiqueta por el momento.</p>
      </div>
    ) : (
      <ul>
        {posts.map((post) => (
          <>
            <HorizontalCard
              title={post.data.title}
              img={post.data.heroImage}
              desc={post.data.description}
              url={"/blog/" + post.slug}
              target="_self"
              badge={post.data.badge}
              tags={post.data.tags}
            />
            <div class="divider my-0" />
          </>
        ))}
      </ul>
    )
  }

  <div class="mt-8">
    <a href="/blog" class="btn btn-outline">← Volver al blog</a>
  </div>
</BaseLayout> 